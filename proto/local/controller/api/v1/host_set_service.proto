syntax = "proto3";

package controller.api.v1;

option go_package = "github.com/hashicorp/watchtower/internal/gen/controller/api;api";

import "protoc-gen-swagger/options/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/wrappers.proto";
import "controller/api/resource/v1/host_set.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Controller IAM API"
    version: "0.0.1"
    description: "API for managing the IAM resources for a watchtower deployment."
  }
  schemes: HTTPS
  schemes: HTTP
};

service HostSetService {
  rpc GetHostSet(GetHostSetRequest) returns (GetHostSetResponse) {
    option (google.api.http) = {
      get: "/v1/org/{org}/project/{project}/host_sets/{id}"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      responses: {
        key: "default"
        value: {
          description: "The default error structure returned."
          schema: {
            json_schema: {
              ref: ".controller.api.v1.Error"
            };
          }
        }
      }
    };
  }
  rpc ListHostSets(ListHostSetsRequest) returns (ListHostSetsResponse) {
    option (google.api.http) = {
      get: "/v1/org/{org}/project/{project}/host_sets"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      responses: {
        key: "default"
        value: {
          description: "The default error structure returned."
          schema: {
            json_schema: {
              ref: ".controller.api.v1.Error"
            };
          }
        }
      }
    };
  }
  rpc CreateHostSet(CreateHostSetRequest) returns (CreateHostSetResponse) {
    option (google.api.http) = {
      post: "/v1/org/{org}/project/{project}/host_sets"
      body: "item"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      responses: {
        key: "default"
        value: {
          description: "The default error structure returned."
          schema: {
            json_schema: {
              ref: ".controller.api.v1.Error"
            };
          }
        }
      }
    };
  }
  rpc UpdateHostSet(UpdateHostSetRequest) returns (UpdateHostSetResponse) {
    option (google.api.http) = {
      patch: "/v1/org/{org}/project/{project}/host_sets/{id}"
      body: "item"
        additional_bindings {
          patch: "/v1/org/{org}/project/{project}/host_sets/{id}"
          body: "*"
        }
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      responses: {
        key: "default"
        value: {
          description: "The default error structure returned."
          schema: {
            json_schema: {
              ref: ".controller.api.v1.Error"
            };
          }
        }
      }
    };
  }
  rpc DeleteHostSet(DeleteHostSetRequest) returns (DeleteHostSetResponse) {
    option (google.api.http) = {
      delete: "/v1/org/{org}/project/{project}/host_sets/{id}"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      responses: {
        key: "default"
        value: {
          description: "The default error structure returned."
          schema: {
            json_schema: {
              ref: ".controller.api.v1.Error"
            };
          }
        }
      }
    };
  }
}

enum HostSetView {
  HOST_SET_VIEW_UNSPECIFIED = 0;
  HOST_SET_VIEW_BASIC = 1;
  HOST_SET_VIEW_FULL = 2;
}


message GetHostSetRequest {
  string org = 1;
  string project = 2;
  string id = 3;
  HostSetView view = 4;
}

message GetHostSetResponse {
  api.resource.v1.HostSet item = 1;
}

message ListHostSetsRequest {
  string org = 1;
  string project = 2;
  bool ignore_result_limit = 3;
  HostSetView view = 4;
}

message ListHostSetsResponse {
  repeated api.resource.v1.HostSet items = 1;
}

message CreateHostSetRequest {
  string org = 1;
  string project = 2;
  api.resource.v1.HostSet item = 3;
}

message CreateHostSetResponse {
  string uri = 1;
  api.resource.v1.HostSet item = 2;
}

message UpdateHostSetRequest {
  string org = 1;
  string project = 2;
  string id = 3;
  api.resource.v1.HostSet item = 4;
  google.protobuf.FieldMask update_mask = 5;
}

message UpdateHostSetResponse {
  api.resource.v1.HostSet item = 1;
}

message DeleteHostSetRequest {
  string org = 1;
  string project =2;
  string id = 3;
}

message DeleteHostSetResponse {
  bool existed = 1;
}
