---
# ***
# WARNING: Do not EDIT or MERGE this file, it is generated by packagespec.
# ***

version: 2.1

executors:
  builder:
    docker:
      - image: circleci/buildpack-deps
    environment:
      PRODUCT_REVISION: ""
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c
  builder-machine:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    environment:
      PRODUCT_REVISION: ""
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c

workflows:
  version: 2
  build-standalone:
    jobs:
      - build-common-layers
      - darwin_amd64_package: { requires: [ build-common-layers ] }
      - linux_amd64_package: { requires: [ build-common-layers ] }
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - linux_amd64_package
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"

      - checkout
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build image cache
          keys:
            - cache005-copy-source_df70_{{checksum ".buildcache/cache-keys/copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e"}}
            - cache005-go-modules_54d6_{{checksum ".buildcache/cache-keys/go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd"}}
            - cache005-ui_d280_{{checksum ".buildcache/cache-keys/ui-d280a4872cd4f689a9fa866f8e618210939659d9"}}
            - cache005-base_b2b8_{{checksum ".buildcache/cache-keys/base-b2b897ce4eb6896c61cf4806ecc19a11bc7474aa"}}
      - run:
          name: Finish early if loaded exact match from cache.
          command: |
            if [ -f .buildcache/archives/03-copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e.tar.gz ]; then
              echo "Exact match found in cache, skipping build."
              circleci-agent step halt
            else
              echo "No exact match found, proceeding with build."
            fi
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            LAYER_SPEC_ID=03-copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e make -C packages*.lock load-builder-cache
      - run:
          name: Build base layer
          command: |
            
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

            make -f packages*.lock/layer.mk 00-base-b2b897ce4eb6896c61cf4806ecc19a11bc7474aa-image
      - run:
          name: Build ui layer
          command: |
            
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

            make -f packages*.lock/layer.mk 01-ui-d280a4872cd4f689a9fa866f8e618210939659d9-image
      - run:
          name: Build go-modules layer
          command: |
            
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

            make -f packages*.lock/layer.mk 02-go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd-image
      - run:
          name: Build copy-source layer
          command: |
            
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

            make -f packages*.lock/layer.mk 03-copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e-image

      - run:
          name: Export builder image
          command: make -f packages*.lock/layer.mk 03-copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e-save
      - save_cache:
          name: Save layer copy-source to cache.
          key: cache005-copy-source_df70_{{checksum ".buildcache/cache-keys/copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e"}}
          paths:
            - .buildcache/archives/03-copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e.tar.gz
      - run:
          name: Prepare layer go-modules for caching
          command: mv .buildcache/archives/03-copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e.tar.gz .buildcache/archives/02-go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd.tar.gz
      - save_cache:
          name: Save layer go-modules to cache.
          key: cache005-go-modules_54d6_{{checksum ".buildcache/cache-keys/go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd"}}
          paths:
            - .buildcache/archives/02-go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd.tar.gz
      - run:
          name: Prepare layer ui for caching
          command: mv .buildcache/archives/02-go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd.tar.gz .buildcache/archives/01-ui-d280a4872cd4f689a9fa866f8e618210939659d9.tar.gz
      - save_cache:
          name: Save layer ui to cache.
          key: cache005-ui_d280_{{checksum ".buildcache/cache-keys/ui-d280a4872cd4f689a9fa866f8e618210939659d9"}}
          paths:
            - .buildcache/archives/01-ui-d280a4872cd4f689a9fa866f8e618210939659d9.tar.gz
      - run:
          name: Prepare layer base for caching
          command: mv .buildcache/archives/01-ui-d280a4872cd4f689a9fa866f8e618210939659d9.tar.gz .buildcache/archives/00-base-b2b897ce4eb6896c61cf4806ecc19a11bc7474aa.tar.gz
      - save_cache:
          name: Save layer base to cache.
          key: cache005-base_b2b8_{{checksum ".buildcache/cache-keys/base-b2b897ce4eb6896c61cf4806ecc19a11bc7474aa"}}
          paths:
            - .buildcache/archives/00-base-b2b897ce4eb6896c61cf4806ecc19a11bc7474aa.tar.gz
  darwin_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: ec2601d5987690573ad44e7c580558c9ca3776cc
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache005-package-ec2601d5987690573ad44e7c580558c9ca3776cc-{{checksum ".buildcache/cache-keys/package-ec2601d5987690573ad44e7c580558c9ca3776cc"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache005-copy-source_df70_{{checksum ".buildcache/cache-keys/copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e"}}
          - cache005-go-modules_54d6_{{checksum ".buildcache/cache-keys/go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd"}}
          - cache005-ui_d280_{{checksum ".buildcache/cache-keys/ui-d280a4872cd4f689a9fa866f8e618210939659d9"}}
          - cache005-base_b2b8_{{checksum ".buildcache/cache-keys/base-b2b897ce4eb6896c61cf4806ecc19a11bc7474aa"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache005-package-ec2601d5987690573ad44e7c580558c9ca3776cc-{{checksum ".buildcache/cache-keys/package-ec2601d5987690573ad44e7c580558c9ca3776cc"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 03b80dee87205c34fa72073d1ad1bf474f260e74
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache005-package-03b80dee87205c34fa72073d1ad1bf474f260e74-{{checksum ".buildcache/cache-keys/package-03b80dee87205c34fa72073d1ad1bf474f260e74"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache005-copy-source_df70_{{checksum ".buildcache/cache-keys/copy-source-df70d84b48e1fe48d09efc041bd603cdb8cd0d7e"}}
          - cache005-go-modules_54d6_{{checksum ".buildcache/cache-keys/go-modules-54d68de5b0e9dce10dab8d519be945ba7758efdd"}}
          - cache005-ui_d280_{{checksum ".buildcache/cache-keys/ui-d280a4872cd4f689a9fa866f8e618210939659d9"}}
          - cache005-base_b2b8_{{checksum ".buildcache/cache-keys/base-b2b897ce4eb6896c61cf4806ecc19a11bc7474aa"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            eval "$(ssh-agent -s)"
            ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache005-package-03b80dee87205c34fa72073d1ad1bf474f260e74-{{checksum ".buildcache/cache-keys/package-03b80dee87205c34fa72073d1ad1bf474f260e74"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.


  bundle-releases:
    executor: builder
    steps:
      - checkout
      - write-all-package-cache-keys
      - load-darwin_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: ec2601d5987690573ad44e7c580558c9ca3776cc
          name: Write package metadata for darwin_amd64_package
          command: |
            make package-meta
      - load-linux_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 03b80dee87205c34fa72073d1ad1bf474f260e74
          name: Write package metadata for linux_amd64_package
          command: |
            make package-meta
      - run:
          name: Write package aliases
          command:
            make aliases
      - run:
          name: List Build Cache
          command: ls -lahR .buildcache

      # Give the lockfile a name store_artifacts can work with.
      - run: cp packages*.lock/pkgs.yml lockfile-standalone.yml

      # Surface the lock file as an artifact.
      - store_artifacts:
          path: lockfile-standalone.yml
          destination: lockfile-standalone.yml

      # Surface the package store directory as an artifact.
      # This makes each zipped package separately downloadable.
      - store_artifacts:
          path: .buildcache/packages
          destination: packages-standalone

      # Surface a tarball of the whole package store plus lockfile as an artifact.
      - run: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
      - store_artifacts:
          path: packages-standalone.tar.gz
          destination: packages-standalone.tar.gz

      # Surface a tarball of just the metadata files.
      - run: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
      - store_artifacts:
          path: meta-standalone.tar.gz
          destination: meta-standalone.tar.gz

commands:
  load-darwin_amd64_package:
    steps:
      - restore_cache:
          key: 'cache005-package-ec2601d5987690573ad44e7c580558c9ca3776cc-{{checksum ".buildcache/cache-keys/package-ec2601d5987690573ad44e7c580558c9ca3776cc"}}'
  
  load-linux_amd64_package:
    steps:
      - restore_cache:
          key: 'cache005-package-03b80dee87205c34fa72073d1ad1bf474f260e74-{{checksum ".buildcache/cache-keys/package-03b80dee87205c34fa72073d1ad1bf474f260e74"}}'
  

  write-build-layer-cache-keys:
    steps:
      - run:
          name: Write builder layer cache keys
          command: make -C packages*.lock write-builder-cache-keys

  write-package-cache-key:
    steps:
      - run:
          name: Write package cache key
          command: make -C packages*.lock write-package-cache-key

  write-all-package-cache-keys:
    steps:
      - run:
          name: Write all package cache keys
          command: make -C packages*.lock write-all-package-cache-keys
