---
# ***
# WARNING: Do not EDIT or MERGE this file, it is generated by packagespec.
# ***

version: 2.1

executors:
  builder:
    docker:
      - image: circleci/buildpack-deps
    environment:
      PRODUCT_REVISION: "7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f"
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c
  builder-machine:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    environment:
      PRODUCT_REVISION: "7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f"
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c

workflows:
  version: 2
  build-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942:
    jobs:
      - build-common-layers
      - darwin_amd64_package: { requires: [ build-common-layers ] }
      - freebsd_386_package: { requires: [ build-common-layers ] }
      - freebsd_amd64_package: { requires: [ build-common-layers ] }
      - freebsd_arm_package: { requires: [ build-common-layers ] }
      - linux_386_package: { requires: [ build-common-layers ] }
      - linux_amd64_package: { requires: [ build-common-layers ] }
      - linux_arm_package: { requires: [ build-common-layers ] }
      - linux_arm64_package: { requires: [ build-common-layers ] }
      - netbsd_386_package: { requires: [ build-common-layers ] }
      - netbsd_amd64_package: { requires: [ build-common-layers ] }
      - openbsd_386_package: { requires: [ build-common-layers ] }
      - openbsd_amd64_package: { requires: [ build-common-layers ] }
      - solaris_amd64_package: { requires: [ build-common-layers ] }
      - windows_386_package: { requires: [ build-common-layers ] }
      - windows_amd64_package: { requires: [ build-common-layers ] }
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"

      - checkout
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build image cache
          keys:
            - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
            - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
            - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
            - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Finish early if loaded exact match from cache.
          command: |
            if [ -f .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz ]; then
              echo "Exact match found in cache, skipping build."
              circleci-agent step halt
            else
              echo "No exact match found, proceeding with build."
            fi
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            LAYER_SPEC_ID=03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1 make -C packages*.lock load-builder-cache
      - run:
          name: Build base layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-099928364fd2887ff530039cc75059de9f8b668f-image
      - run:
          name: Build ui layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e-image
      - run:
          name: Build go-modules layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34-image
      - run:
          name: Build copy-source layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1-image

      - run:
          name: Export builder image
          command: make -f packages*.lock/layer.mk 03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1-save
      - save_cache:
          name: Save layer copy-source to cache.
          key: cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          paths:
            - .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz
      - run:
          name: Prepare layer go-modules for caching
          command: mv .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz
      - save_cache:
          name: Save layer go-modules to cache.
          key: cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          paths:
            - .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz
      - run:
          name: Prepare layer ui for caching
          command: mv .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz
      - save_cache:
          name: Save layer ui to cache.
          key: cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          paths:
            - .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz
      - run:
          name: Prepare layer base for caching
          command: mv .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz .buildcache/archives/00-base-099928364fd2887ff530039cc75059de9f8b668f.tar.gz
      - save_cache:
          name: Save layer base to cache.
          key: cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
          paths:
            - .buildcache/archives/00-base-099928364fd2887ff530039cc75059de9f8b668f.tar.gz
  darwin_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: dbd84730268fa080039fd3b5eaeab4cf6c5943ab
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-dbd84730268fa080039fd3b5eaeab4cf6c5943ab-{{checksum ".buildcache/cache-keys/package-dbd84730268fa080039fd3b5eaeab4cf6c5943ab"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-dbd84730268fa080039fd3b5eaeab4cf6c5943ab-{{checksum ".buildcache/cache-keys/package-dbd84730268fa080039fd3b5eaeab4cf6c5943ab"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 102b465fbd9553c692b91bd8cdac5b05cf69da5c
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-102b465fbd9553c692b91bd8cdac5b05cf69da5c-{{checksum ".buildcache/cache-keys/package-102b465fbd9553c692b91bd8cdac5b05cf69da5c"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-102b465fbd9553c692b91bd8cdac5b05cf69da5c-{{checksum ".buildcache/cache-keys/package-102b465fbd9553c692b91bd8cdac5b05cf69da5c"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 940edad905fc89e016914a2d1d72f5d6c0172aad
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-940edad905fc89e016914a2d1d72f5d6c0172aad-{{checksum ".buildcache/cache-keys/package-940edad905fc89e016914a2d1d72f5d6c0172aad"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-940edad905fc89e016914a2d1d72f5d6c0172aad-{{checksum ".buildcache/cache-keys/package-940edad905fc89e016914a2d1d72f5d6c0172aad"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_arm_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: f49d5da9149ca32419ee6548445c51aa45f14668
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-f49d5da9149ca32419ee6548445c51aa45f14668-{{checksum ".buildcache/cache-keys/package-f49d5da9149ca32419ee6548445c51aa45f14668"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-f49d5da9149ca32419ee6548445c51aa45f14668-{{checksum ".buildcache/cache-keys/package-f49d5da9149ca32419ee6548445c51aa45f14668"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: f99a70b7479a08bd4c6aabd77b71623067cd9170
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-f99a70b7479a08bd4c6aabd77b71623067cd9170-{{checksum ".buildcache/cache-keys/package-f99a70b7479a08bd4c6aabd77b71623067cd9170"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-f99a70b7479a08bd4c6aabd77b71623067cd9170-{{checksum ".buildcache/cache-keys/package-f99a70b7479a08bd4c6aabd77b71623067cd9170"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 3304e2fc4eb57e5192abea117ad02a4c6818f933
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-3304e2fc4eb57e5192abea117ad02a4c6818f933-{{checksum ".buildcache/cache-keys/package-3304e2fc4eb57e5192abea117ad02a4c6818f933"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-3304e2fc4eb57e5192abea117ad02a4c6818f933-{{checksum ".buildcache/cache-keys/package-3304e2fc4eb57e5192abea117ad02a4c6818f933"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_arm_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: c219f16769e4587c0697a1bdd59d6b6d8af05dc0
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-c219f16769e4587c0697a1bdd59d6b6d8af05dc0-{{checksum ".buildcache/cache-keys/package-c219f16769e4587c0697a1bdd59d6b6d8af05dc0"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-c219f16769e4587c0697a1bdd59d6b6d8af05dc0-{{checksum ".buildcache/cache-keys/package-c219f16769e4587c0697a1bdd59d6b6d8af05dc0"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_arm64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 903c802e7dc0445b624052aefc568ca77023747c
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-903c802e7dc0445b624052aefc568ca77023747c-{{checksum ".buildcache/cache-keys/package-903c802e7dc0445b624052aefc568ca77023747c"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-903c802e7dc0445b624052aefc568ca77023747c-{{checksum ".buildcache/cache-keys/package-903c802e7dc0445b624052aefc568ca77023747c"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  netbsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: cd0779080863a3543bd8465db0b943fa475b14b7
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-cd0779080863a3543bd8465db0b943fa475b14b7-{{checksum ".buildcache/cache-keys/package-cd0779080863a3543bd8465db0b943fa475b14b7"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-cd0779080863a3543bd8465db0b943fa475b14b7-{{checksum ".buildcache/cache-keys/package-cd0779080863a3543bd8465db0b943fa475b14b7"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  netbsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: c6952781b9ef7c728508db6e75461a975d9eef2f
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-c6952781b9ef7c728508db6e75461a975d9eef2f-{{checksum ".buildcache/cache-keys/package-c6952781b9ef7c728508db6e75461a975d9eef2f"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-c6952781b9ef7c728508db6e75461a975d9eef2f-{{checksum ".buildcache/cache-keys/package-c6952781b9ef7c728508db6e75461a975d9eef2f"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  openbsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 42b4f7889c5cfb80ec69fa9860876b9b796fe850
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-42b4f7889c5cfb80ec69fa9860876b9b796fe850-{{checksum ".buildcache/cache-keys/package-42b4f7889c5cfb80ec69fa9860876b9b796fe850"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-42b4f7889c5cfb80ec69fa9860876b9b796fe850-{{checksum ".buildcache/cache-keys/package-42b4f7889c5cfb80ec69fa9860876b9b796fe850"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  openbsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 1a7cd257b59a189059a94be792ef802b2e443f9f
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-1a7cd257b59a189059a94be792ef802b2e443f9f-{{checksum ".buildcache/cache-keys/package-1a7cd257b59a189059a94be792ef802b2e443f9f"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-1a7cd257b59a189059a94be792ef802b2e443f9f-{{checksum ".buildcache/cache-keys/package-1a7cd257b59a189059a94be792ef802b2e443f9f"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  solaris_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 1c12d01fefaf99959943d8ed79003b88bc79b36b
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-1c12d01fefaf99959943d8ed79003b88bc79b36b-{{checksum ".buildcache/cache-keys/package-1c12d01fefaf99959943d8ed79003b88bc79b36b"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-1c12d01fefaf99959943d8ed79003b88bc79b36b-{{checksum ".buildcache/cache-keys/package-1c12d01fefaf99959943d8ed79003b88bc79b36b"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  windows_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: a6aaef546f97baed4193bfb9d92d92a3e90f89d3
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-a6aaef546f97baed4193bfb9d92d92a3e90f89d3-{{checksum ".buildcache/cache-keys/package-a6aaef546f97baed4193bfb9d92d92a3e90f89d3"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-a6aaef546f97baed4193bfb9d92d92a3e90f89d3-{{checksum ".buildcache/cache-keys/package-a6aaef546f97baed4193bfb9d92d92a3e90f89d3"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  windows_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 691cb1e515b5f983417d6d425a8ef04c39176889
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-691cb1e515b5f983417d6d425a8ef04c39176889-{{checksum ".buildcache/cache-keys/package-691cb1e515b5f983417d6d425a8ef04c39176889"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-691cb1e515b5f983417d6d425a8ef04c39176889-{{checksum ".buildcache/cache-keys/package-691cb1e515b5f983417d6d425a8ef04c39176889"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.


  bundle-releases:
    executor: builder
    steps:
      - checkout
      - write-all-package-cache-keys
      - load-darwin_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: dbd84730268fa080039fd3b5eaeab4cf6c5943ab
          name: Write package metadata for darwin_amd64_package
          command: |
            make package-meta
      - load-freebsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 102b465fbd9553c692b91bd8cdac5b05cf69da5c
          name: Write package metadata for freebsd_386_package
          command: |
            make package-meta
      - load-freebsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 940edad905fc89e016914a2d1d72f5d6c0172aad
          name: Write package metadata for freebsd_amd64_package
          command: |
            make package-meta
      - load-freebsd_arm_package
      - run:
          environment:
            PACKAGE_SPEC_ID: f49d5da9149ca32419ee6548445c51aa45f14668
          name: Write package metadata for freebsd_arm_package
          command: |
            make package-meta
      - load-linux_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: f99a70b7479a08bd4c6aabd77b71623067cd9170
          name: Write package metadata for linux_386_package
          command: |
            make package-meta
      - load-linux_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 3304e2fc4eb57e5192abea117ad02a4c6818f933
          name: Write package metadata for linux_amd64_package
          command: |
            make package-meta
      - load-linux_arm_package
      - run:
          environment:
            PACKAGE_SPEC_ID: c219f16769e4587c0697a1bdd59d6b6d8af05dc0
          name: Write package metadata for linux_arm_package
          command: |
            make package-meta
      - load-linux_arm64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 903c802e7dc0445b624052aefc568ca77023747c
          name: Write package metadata for linux_arm64_package
          command: |
            make package-meta
      - load-netbsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: cd0779080863a3543bd8465db0b943fa475b14b7
          name: Write package metadata for netbsd_386_package
          command: |
            make package-meta
      - load-netbsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: c6952781b9ef7c728508db6e75461a975d9eef2f
          name: Write package metadata for netbsd_amd64_package
          command: |
            make package-meta
      - load-openbsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 42b4f7889c5cfb80ec69fa9860876b9b796fe850
          name: Write package metadata for openbsd_386_package
          command: |
            make package-meta
      - load-openbsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 1a7cd257b59a189059a94be792ef802b2e443f9f
          name: Write package metadata for openbsd_amd64_package
          command: |
            make package-meta
      - load-solaris_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 1c12d01fefaf99959943d8ed79003b88bc79b36b
          name: Write package metadata for solaris_amd64_package
          command: |
            make package-meta
      - load-windows_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: a6aaef546f97baed4193bfb9d92d92a3e90f89d3
          name: Write package metadata for windows_386_package
          command: |
            make package-meta
      - load-windows_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 691cb1e515b5f983417d6d425a8ef04c39176889
          name: Write package metadata for windows_amd64_package
          command: |
            make package-meta
      - run:
          name: Write package aliases
          command:
            make aliases
      - run:
          name: List Build Cache
          command: ls -lahR .buildcache

      # Give the lockfile a name store_artifacts can work with.
      - run: cp packages*.lock/pkgs.yml lockfile-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.yml

      # Surface the lock file as an artifact.
      - store_artifacts:
          path: lockfile-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.yml
          destination: lockfile-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.yml

      # Surface the package store directory as an artifact.
      # This makes each zipped package separately downloadable.
      - store_artifacts:
          path: .buildcache/packages
          destination: packages-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942

      # Surface a tarball of the whole package store plus lockfile as an artifact.
      - run: tar -czf packages-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.tar.gz .buildcache/packages lockfile-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.yml
      - store_artifacts:
          path: packages-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.tar.gz
          destination: packages-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.tar.gz

      # Surface a tarball of just the metadata files.
      - run: tar -czf meta-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.tar.gz .buildcache/packages/store/*.json lockfile-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.yml
      - store_artifacts:
          path: meta-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.tar.gz
          destination: meta-7b7fbfa2c1af4c7ee2f60857cedb22f19daffc4f-ccf4cf2f99886942.tar.gz

commands:
  load-darwin_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-dbd84730268fa080039fd3b5eaeab4cf6c5943ab-{{checksum ".buildcache/cache-keys/package-dbd84730268fa080039fd3b5eaeab4cf6c5943ab"}}'
  
  load-freebsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-102b465fbd9553c692b91bd8cdac5b05cf69da5c-{{checksum ".buildcache/cache-keys/package-102b465fbd9553c692b91bd8cdac5b05cf69da5c"}}'
  
  load-freebsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-940edad905fc89e016914a2d1d72f5d6c0172aad-{{checksum ".buildcache/cache-keys/package-940edad905fc89e016914a2d1d72f5d6c0172aad"}}'
  
  load-freebsd_arm_package:
    steps:
      - restore_cache:
          key: 'cache006-package-f49d5da9149ca32419ee6548445c51aa45f14668-{{checksum ".buildcache/cache-keys/package-f49d5da9149ca32419ee6548445c51aa45f14668"}}'
  
  load-linux_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-f99a70b7479a08bd4c6aabd77b71623067cd9170-{{checksum ".buildcache/cache-keys/package-f99a70b7479a08bd4c6aabd77b71623067cd9170"}}'
  
  load-linux_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-3304e2fc4eb57e5192abea117ad02a4c6818f933-{{checksum ".buildcache/cache-keys/package-3304e2fc4eb57e5192abea117ad02a4c6818f933"}}'
  
  load-linux_arm_package:
    steps:
      - restore_cache:
          key: 'cache006-package-c219f16769e4587c0697a1bdd59d6b6d8af05dc0-{{checksum ".buildcache/cache-keys/package-c219f16769e4587c0697a1bdd59d6b6d8af05dc0"}}'
  
  load-linux_arm64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-903c802e7dc0445b624052aefc568ca77023747c-{{checksum ".buildcache/cache-keys/package-903c802e7dc0445b624052aefc568ca77023747c"}}'
  
  load-netbsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-cd0779080863a3543bd8465db0b943fa475b14b7-{{checksum ".buildcache/cache-keys/package-cd0779080863a3543bd8465db0b943fa475b14b7"}}'
  
  load-netbsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-c6952781b9ef7c728508db6e75461a975d9eef2f-{{checksum ".buildcache/cache-keys/package-c6952781b9ef7c728508db6e75461a975d9eef2f"}}'
  
  load-openbsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-42b4f7889c5cfb80ec69fa9860876b9b796fe850-{{checksum ".buildcache/cache-keys/package-42b4f7889c5cfb80ec69fa9860876b9b796fe850"}}'
  
  load-openbsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-1a7cd257b59a189059a94be792ef802b2e443f9f-{{checksum ".buildcache/cache-keys/package-1a7cd257b59a189059a94be792ef802b2e443f9f"}}'
  
  load-solaris_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-1c12d01fefaf99959943d8ed79003b88bc79b36b-{{checksum ".buildcache/cache-keys/package-1c12d01fefaf99959943d8ed79003b88bc79b36b"}}'
  
  load-windows_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-a6aaef546f97baed4193bfb9d92d92a3e90f89d3-{{checksum ".buildcache/cache-keys/package-a6aaef546f97baed4193bfb9d92d92a3e90f89d3"}}'
  
  load-windows_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-691cb1e515b5f983417d6d425a8ef04c39176889-{{checksum ".buildcache/cache-keys/package-691cb1e515b5f983417d6d425a8ef04c39176889"}}'
  

  write-build-layer-cache-keys:
    steps:
      - run:
          name: Write builder layer cache keys
          command: make -C packages*.lock write-builder-cache-keys

  write-package-cache-key:
    steps:
      - run:
          name: Write package cache key
          command: make -C packages*.lock write-package-cache-key

  write-all-package-cache-keys:
    steps:
      - run:
          name: Write all package cache keys
          command: make -C packages*.lock write-all-package-cache-keys
