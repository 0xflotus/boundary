### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
version: 2
jobs:
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache003-copy-source_1712_{{checksum ".buildcache/cache-keys/copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a"}}
        - cache003-download-modules_1c94_{{checksum ".buildcache/cache-keys/download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c"}}
        - cache003-generate-assets_99c4_{{checksum ".buildcache/cache-keys/generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef"}}
        - cache003-compile-ui_0ecf_{{checksum ".buildcache/cache-keys/compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2"}}
        - cache003-install-tools_8114_{{checksum ".buildcache/cache-keys/install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a"}}
        - cache003-configure-go_d1b7_{{checksum ".buildcache/cache-keys/configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9"}}
        - cache003-configure-git-ssh_6f99_{{checksum ".buildcache/cache-keys/configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c"}}
        - cache003-install-deps_26f6_{{checksum ".buildcache/cache-keys/install-deps-26f69f56f69167fa318395d353e592d24df2764f"}}
        name: Restore build image cache
    - run:
        command: |
          if [ -f .buildcache/archives/07-copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=07-copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 00-install-deps-26f69f56f69167fa318395d353e592d24df2764f-image
        name: Build install-deps layer
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 01-configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c-image
        name: Build configure-git-ssh layer
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 02-configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9-image
        name: Build configure-go layer
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 03-install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a-image
        name: Build install-tools layer
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 04-compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2-image
        name: Build compile-ui layer
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 05-generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef-image
        name: Build generate-assets layer
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 06-download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c-image
        name: Build download-modules layer
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -f packages*.lock/layer.mk 07-copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a-image
        name: Build copy-source layer
    - run:
        command: make -f packages*.lock/layer.mk 07-copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a-save
    - save_cache:
        key: cache003-copy-source_1712_{{checksum ".buildcache/cache-keys/copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a"}}
        name: Save layer copy-source to cache.
        paths:
        - .buildcache/archives/07-copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a.tar.gz
    - run:
        command: mv .buildcache/archives/07-copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a.tar.gz .buildcache/archives/06-download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c.tar.gz
        name: Prepare layer download-modules for caching
    - save_cache:
        key: cache003-download-modules_1c94_{{checksum ".buildcache/cache-keys/download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c"}}
        name: Save layer download-modules to cache.
        paths:
        - .buildcache/archives/06-download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c.tar.gz
    - run:
        command: mv .buildcache/archives/06-download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c.tar.gz .buildcache/archives/05-generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef.tar.gz
        name: Prepare layer generate-assets for caching
    - save_cache:
        key: cache003-generate-assets_99c4_{{checksum ".buildcache/cache-keys/generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef"}}
        name: Save layer generate-assets to cache.
        paths:
        - .buildcache/archives/05-generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef.tar.gz
    - run:
        command: mv .buildcache/archives/05-generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef.tar.gz .buildcache/archives/04-compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2.tar.gz
        name: Prepare layer compile-ui for caching
    - save_cache:
        key: cache003-compile-ui_0ecf_{{checksum ".buildcache/cache-keys/compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2"}}
        name: Save layer compile-ui to cache.
        paths:
        - .buildcache/archives/04-compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2.tar.gz
    - run:
        command: mv .buildcache/archives/04-compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2.tar.gz .buildcache/archives/03-install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a.tar.gz
        name: Prepare layer install-tools for caching
    - save_cache:
        key: cache003-install-tools_8114_{{checksum ".buildcache/cache-keys/install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a"}}
        name: Save layer install-tools to cache.
        paths:
        - .buildcache/archives/03-install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a.tar.gz
    - run:
        command: mv .buildcache/archives/03-install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a.tar.gz .buildcache/archives/02-configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9.tar.gz
        name: Prepare layer configure-go for caching
    - save_cache:
        key: cache003-configure-go_d1b7_{{checksum ".buildcache/cache-keys/configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9"}}
        name: Save layer configure-go to cache.
        paths:
        - .buildcache/archives/02-configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9.tar.gz
    - run:
        command: mv .buildcache/archives/02-configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9.tar.gz .buildcache/archives/01-configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c.tar.gz
        name: Prepare layer configure-git-ssh for caching
    - save_cache:
        key: cache003-configure-git-ssh_6f99_{{checksum ".buildcache/cache-keys/configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c"}}
        name: Save layer configure-git-ssh to cache.
        paths:
        - .buildcache/archives/01-configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c.tar.gz
    - run:
        command: mv .buildcache/archives/01-configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c.tar.gz .buildcache/archives/00-install-deps-26f69f56f69167fa318395d353e592d24df2764f.tar.gz
        name: Prepare layer install-deps for caching
    - save_cache:
        key: cache003-install-deps_26f6_{{checksum ".buildcache/cache-keys/install-deps-26f69f56f69167fa318395d353e592d24df2764f"}}
        name: Save layer install-deps to cache.
        paths:
        - .buildcache/archives/00-install-deps-26f69f56f69167fa318395d353e592d24df2764f.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 733dc7a639c8b16c6fb529935517559b672eca7b
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache003-package-733dc7a639c8b16c6fb529935517559b672eca7b-{{checksum ".buildcache/cache-keys/package-733dc7a639c8b16c6fb529935517559b672eca7b"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache003-copy-source_1712_{{checksum ".buildcache/cache-keys/copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a"}}
        - cache003-download-modules_1c94_{{checksum ".buildcache/cache-keys/download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c"}}
        - cache003-generate-assets_99c4_{{checksum ".buildcache/cache-keys/generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef"}}
        - cache003-compile-ui_0ecf_{{checksum ".buildcache/cache-keys/compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2"}}
        - cache003-install-tools_8114_{{checksum ".buildcache/cache-keys/install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a"}}
        - cache003-configure-go_d1b7_{{checksum ".buildcache/cache-keys/configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9"}}
        - cache003-configure-git-ssh_6f99_{{checksum ".buildcache/cache-keys/configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c"}}
        - cache003-install-deps_26f6_{{checksum ".buildcache/cache-keys/install-deps-26f69f56f69167fa318395d353e592d24df2764f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache003-package-733dc7a639c8b16c6fb529935517559b672eca7b-{{checksum ".buildcache/cache-keys/package-733dc7a639c8b16c6fb529935517559b672eca7b"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: d7751d7a0b1555847d9108b79169668c78b70f69
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache003-package-d7751d7a0b1555847d9108b79169668c78b70f69-{{checksum ".buildcache/cache-keys/package-d7751d7a0b1555847d9108b79169668c78b70f69"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache003-copy-source_1712_{{checksum ".buildcache/cache-keys/copy-source-1712aa0127d1c3b0579378a76a4f796ce37c864a"}}
        - cache003-download-modules_1c94_{{checksum ".buildcache/cache-keys/download-modules-1c94f111634d1bedacca4bdcf685fcf6c71f1a6c"}}
        - cache003-generate-assets_99c4_{{checksum ".buildcache/cache-keys/generate-assets-99c4e86bf83e6355345f21f996303a58aac2deef"}}
        - cache003-compile-ui_0ecf_{{checksum ".buildcache/cache-keys/compile-ui-0ecf725e89a49d262e7943a57a1cd5ad2ef4c9d2"}}
        - cache003-install-tools_8114_{{checksum ".buildcache/cache-keys/install-tools-81144fd90d36cdf3b3496ddce6d178b169805b2a"}}
        - cache003-configure-go_d1b7_{{checksum ".buildcache/cache-keys/configure-go-d1b7dcf4dd461dce5442db761dda22a3745714c9"}}
        - cache003-configure-git-ssh_6f99_{{checksum ".buildcache/cache-keys/configure-git-ssh-6f9956febcef3dd8bddb32ea98dc75c73010e51c"}}
        - cache003-install-deps_26f6_{{checksum ".buildcache/cache-keys/install-deps-26f69f56f69167fa318395d353e592d24df2764f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache003-package-d7751d7a0b1555847d9108b79169668c78b70f69-{{checksum ".buildcache/cache-keys/package-d7751d7a0b1555847d9108b79169668c78b70f69"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - restore_cache:
        key: cache003-package-733dc7a639c8b16c6fb529935517559b672eca7b-{{checksum ".buildcache/cache-keys/package-733dc7a639c8b16c6fb529935517559b672eca7b"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 733dc7a639c8b16c6fb529935517559b672eca7b
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache003-package-d7751d7a0b1555847d9108b79169668c78b70f69-{{checksum ".buildcache/cache-keys/package-d7751d7a0b1555847d9108b79169668c78b70f69"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: d7751d7a0b1555847d9108b79169668c78b70f69
        name: Write package metadata for linux_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: |
          make test-ci
        name: Run Acceptance Tests
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
        name: Slack - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
        name: Slack - Setting Success Condition
        when: on_success
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          current_branch_in_filter=false

          IFS="," read -ra BRANCH_FILTERS <<< "master"

          for i in "${BRANCH_FILTERS[@]}"; do
            if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
              current_branch_in_filter=true
            fi
          done

          if [ "x" == "xmaster" ] || [ "$current_branch_in_filter" = true ]; then
            # Provide error if no webhook is set and error. Otherwise continue
            if [ -z "webhook" ]; then
              echo "NO SLACK WEBHOOK SET"
              echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              #Create Members string
              if [ -n "" ]; then
                IFS="," read -ra SLACK_MEMBERS <<< ""
                for i in "${SLACK_MEMBERS[@]}"; do
                  if [ $(echo ${i} | head -c 1) == "S" ]; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                  elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                  else
                    SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                  fi
                done
              fi
              #If successful
              if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                #Skip if fail_only
                if [ true = true ]; then
                  echo "The job completed successfully"
                  echo '"fail_only" is set to "true". No Slack notification sent.'
                else
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                              \"attachments\": [ \
                                { \
                                  \"fallback\": \":tada: A $CIRCLE_JOB job has succeeded!\", \
                                  \"text\": \":tada: A $CIRCLE_JOB job has succeeded! $SLACK_MENTIONS\", \
                                  \"fields\": [ \
                                    { \
                                      \"title\": \"Project\", \
                                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                      \"short\": true \
                                    }, \
                                    { \
                                      \"title\": \"Job Number\", \
                                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                                      \"short\": true \
                                    } \
                                  ], \
                                  \"actions\": [ \
                                    { \
                                      \"type\": \"button\", \
                                      \"text\": \"Visit Job\", \
                                      \"url\": \"$CIRCLE_BUILD_URL\" \
                                    } \
                                  ], \
                                  \"color\": \"#1CBF43\" \
                                } \
                              ] \
                            } " webhook
                  echo "Job completed successfully. Alert sent."
                fi
              else
                #If Failed
                curl -X POST -H 'Content-type: application/json' \
                  --data "{ \
                    \"attachments\": [ \
                      { \
                        \"fallback\": \":red_circle: A $CIRCLE_JOB job has failed!\", \
                        \"text\": \":red_circle: A $CIRCLE_JOB job has failed! $SLACK_MENTIONS\", \
                        \"fields\": [ \
                          { \
                            \"title\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"short\": true \
                          }, \
                          { \
                            \"title\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"short\": true \
                          } \
                        ], \
                        \"actions\": [ \
                          { \
                            \"type\": \"button\", \
                            \"text\": \"Visit Job\", \
                            \"url\": \"$CIRCLE_BUILD_URL\" \
                          } \
                        ], \
                        \"color\": \"#ed5c5c\" \
                      } \
                    ] \
                  } " webhook
                echo "Job failed. Alert sent."
              fi
            fi
          else
            echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
          fi
        name: Slack - Sending Status Alert
        shell: /bin/bash
        when: always
    working_directory: ~/boundary
workflows:
  build-standalone:
    jobs:
    - build-common-layers
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_amd64_package
        - linux_amd64_package
  default:
    jobs:
    - build
  version: 2
