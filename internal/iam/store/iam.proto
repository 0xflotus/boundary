syntax = "proto3";

// define an oplog package within the watchtower controller
package hashicorp.watchtower.controller.iam.store.v1;
option go_package = "github.com/hashicorp/watchtower/internal/iam/store;store";

import "google/protobuf/timestamp.proto";

// Timestamp for oplog messages
message Timestamp {
  google.protobuf.Timestamp timestamp = 1;
}

message Scope {
  enum Type {
    Unknown = 0;
    Organization = 1;
    Project = 2;
  }

  // @inject_tag: gorm:"primary_key"
  uint32 id = 1;

  // create_time from the RDBMS
  // @inject_tag: `gorm:"default:current_timestamp"`
  Timestamp create_time = 2;

  // update_time from the RDBMS
  // @inject_tag: `gorm:"default:current_timestamp"`
  Timestamp update_time = 3;

  // public_id is the used to access the Scope via an API
  string public_id = 4;

  // FriendlyName is the optional friendly name used to
  // access the Scope via an API
  // @inject_tag: `gorm:"default:null"`
  string friendly_name = 5;

  // Type of scope
  Type type = 6;

  // parent_id is the id (primary key in the Scope aggregate) of scope's parent
  // @inject_tag: `gorm:"default:0"`
  uint32 parent_id = 7;

  // owner_id is the id (primary key in the user aggregate) of the user that
  // owns this scope
  uint32 owner_id = 8;

  // one to many relationship
  // @inject_tag: gorm:"foreignkey:primary_scope_id"
  repeated AssignableScope assignable_scopes = 9;
}

message AssignableScope {
  // @inject_tag: gorm:"primary_key"
  uint32 id = 1;

  // create_time from the RDBMS
  // @inject_tag: `gorm:"default:CURRENT_TIMESTAMP"`
  Timestamp create_time = 2;

  // update_time from the RDBMS
  // @inject_tag: `gorm:"default:CURRENT_TIMESTAMP"`
  Timestamp update_time = 3;

  // public_id is the used to access the AssignablScope via an API
  string public_id = 4;

  // FriendlyName is the optional friendly name used to
  // access the Scope via an API
  // @inject_tag: `gorm:"default:null"`
  string friendly_name = 5;

  // scope id of the PrimaryScope
  uint32 primary_scope_id = 6;
  // @inject_tag: gorm:"foreignkey:ScopeId"
  Scope primary_scope = 7;

  // scope_id of the AssignableScope
  uint32 assignable_scope_id = 9;
  // @inject_tag: gorm:"foreignkey:ScopeId"
  Scope assignable_scope = 10;
}

message User {
  // @inject_tag: gorm:"-" json:"-"
  string table = 1;

  // @inject_tag: gorm:"primary_key"
  uint32 id = 2;

  // create_time from the RDBMS
  // @inject_tag: `gorm:"default:current_timestamp"`
  Timestamp create_time = 3;

  // update_time from the RDBMS
  // @inject_tag: `gorm:"default:current_timestamp"`
  Timestamp update_time = 4;

  // public_id is used to access the User via an API
  string public_id = 5;

  // FriendlyName is the optional friendly name used to
  // access the User via an API
  // @inject_tag: `gorm:"default:null"`
  string friendly_name = 6;

  string name = 7;

  // primary scope id of the PrimaryScope
  // @inject_tag: `gorm:"default:null"`
  uint32 primary_scope_id = 8;
  // @inject_tag: gorm:"foreignkey:ScopeId"
  Scope primary_scope = 9;

  // one to many relationship
  // @inject_tag: gorm:"foreignkey:primary_scope_id"
  repeated AssignableScope assignable_scopes = 10;

  // owner_id is the id (primary key in the user aggregate) of the user that
  // owns this scope
  // @inject_tag: `gorm:"default:0"`
  uint32 owner_id = 11;
}